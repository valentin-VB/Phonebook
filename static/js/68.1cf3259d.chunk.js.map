{"version":3,"file":"static/js/68.1cf3259d.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.js","components/Input/Input.jsx","components/Toaster.jsx","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","components/SignUpForm/SignUpForm.jsx","pages/SignUp/SignUp.jsx","validationShemes.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  font-size: 18px;\n  background-color: aliceblue;\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n`;\n","import { TextField } from '@mui/material';\n\nfunction Input({\n  name,\n  label,\n  type,\n  autoFocus = false,\n  register,\n  autoComplete,\n  pattern,\n  title,\n  startadornment,\n}) {\n  return (\n    <TextField\n      type={type}\n      margin=\"normal\"\n      required\n      fullWidth\n      id={name}\n      label={label}\n      autoComplete={autoComplete}\n      autoFocus={autoFocus}\n      pattern={pattern}\n      title={title}\n      InputProps={{\n        startAdornment: startadornment,\n      }}\n      {...register(name)}\n    />\n  );\n}\n\nexport default Input;\n","import { Toaster } from 'react-hot-toast';\n\nexport const DefToaster = () => {\n  return (\n    <Toaster\n      position=\"top-center\"\n      reverseOrder={false}\n      gutter={20}\n      containerClassName=\"\"\n      containerStyle={{}}\n      toastOptions={{\n        success: {\n          duration: 4000,\n          theme: {\n            primary: 'green',\n            secondary: 'black',\n          },\n        },\n      }}\n    />\n  );\n};\n","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useRegisterUserMutation } from 'Redux/auth/authApi';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials } from 'Redux/auth/authSlice';\nimport toast from 'react-hot-toast';\nimport { DefToaster } from 'components/Toaster';\nimport { Box, Button, Grid } from '@mui/material';\nimport Input from 'components/Input';\nimport { ErrorText } from 'components/ContactsForm/ContactsForm.styled';\nimport { signUpScheme } from 'validationShemes';\n\nconst SignUpForm = () => {\n  const [registerUser] = useRegisterUserMutation();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(signUpScheme),\n  });\n  const dispatch = useDispatch();\n\n  const handleSignUpSubmit = async data => {\n    const newUserData = {\n      name: `${data.firstName} ${data.lastName}`,\n      email: data.email,\n      password: data.password,\n    };\n\n    try {\n      const response = await registerUser(newUserData);\n      switch (response.error?.status) {\n        case 400:\n          toast.error('Account with this email address already exists');\n          break;\n        case 500:\n          toast.error('Server Error');\n          break;\n        default:\n          dispatch(setCredentials(response.data));\n      }\n    } catch (e) {\n      console.warn('Error', e);\n    }\n    reset();\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{ mt: 3 }}\n        onSubmit={handleSubmit(data => {\n          handleSignUpSubmit(data);\n        })}\n      >\n        <Grid container spacing={2} justifyContent=\"space-between\">\n          <Grid item sx={{ width: '50%' }}>\n            <Input\n              name=\"firstName\"\n              label=\"First Name\"\n              register={register}\n              autoComplete=\"given-name\"\n              autoFocus\n            ></Input>\n            <ErrorText> {errors.firstName?.message}</ErrorText>\n          </Grid>\n          <Grid item sx={{ width: '50%' }}>\n            <Input\n              name=\"lastName\"\n              label=\"Last Name\"\n              register={register}\n              autoComplete=\"family-name\"\n            />\n            <ErrorText> {errors.lastName?.message}</ErrorText>\n          </Grid>\n        </Grid>\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          register={register}\n          autoComplete=\"email\"\n        />\n        <ErrorText> {errors.email?.message}</ErrorText>\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          register={register}\n          autoComplete=\"current-password\"\n        />\n        <ErrorText> {errors.password?.message}</ErrorText>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Sign Up\n        </Button>\n      </Box>\n      <DefToaster />\n    </>\n  );\n};\n\nexport default SignUpForm;\n","import { Avatar, Box, Link, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Helmet } from 'react-helmet';\nimport { NavLink } from 'react-router-dom';\nimport SignUpForm from 'components/SignUpForm';\n\nexport default function SignUp() {\n  return (\n    <>\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <SignUpForm />\n        <Link component={NavLink} to=\"/login\">\n          Already have an account? Sign in\n        </Link>\n      </Box>\n    </>\n  );\n}\n","import * as yup from 'yup';\n\nexport let signUpScheme = yup.object().shape({\n  firstName: yup\n    .string()\n    .min(3, 'Name is Too Short')\n    .max(25, 'Name is to Long'),\n  lastName: yup.string().min(3, 'Name is Too Short').max(25, 'Name is to Long'),\n  email: yup.string().email('Not valid email'),\n  password: yup\n    .string()\n    .min(8, 'Password is to short')\n    .max(21, 'Password is to long'),\n});\n\nexport let addContactSchema = yup.object().shape({\n  name: yup.string().min(2, 'Name is Too Short').max(25, 'Name is to Long'),\n  number: yup\n    .number()\n    .typeError(\"That doesn't look like a phone number\")\n    .test(\n      'Is positive?',\n      'A phone number must be a positive number',\n      value => value > 0\n    )\n    .integer(\"A phone number can't include a decimal point\")\n    .min(999999, 'A phone number is to short')\n    .max(999999999999999, 'A phone number is to long'),\n});\n"],"names":["ErrorText","styled","name","label","type","autoFocus","register","autoComplete","pattern","title","startadornment","TextField","margin","required","fullWidth","id","InputProps","startAdornment","DefToaster","position","reverseOrder","gutter","containerClassName","containerStyle","toastOptions","success","duration","theme","primary","secondary","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","map","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","_extends","boxSizing","display","flexWrap","width","minWidth","directionValues","resolveBreakpointValues","handleBreakpoints","propValue","output","flexDirection","gridClasses","maxWidth","rowSpacing","zeroValueBreakpointKeys","rowSpacingValues","_zeroValueBreakpointK","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","undefined","Math","round","more","assign","up","useUtilityClasses","classes","spacingClasses","className","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","GridContext","breakpointsValues","otherFiltered","_jsx","children","clsx","as","useRegisterUserMutation","registerUser","useForm","resolver","yupResolver","signUpScheme","handleSubmit","reset","errors","formState","dispatch","useDispatch","handleSignUpSubmit","data","newUserData","firstName","lastName","email","password","response","error","status","toast","setCredentials","console","warn","Box","sx","mt","onSubmit","justifyContent","Input","message","Button","variant","mb","SignUp","Helmet","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","Link","NavLink","to","yup","shape","min","max","addContactSchema","number","typeError","test","integer"],"sourceRoot":""}